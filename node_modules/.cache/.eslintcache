[{"D:\\react\\client\\src\\index.js":"1","D:\\react\\client\\src\\App.js":"2","D:\\react\\client\\src\\pages\\Dashboard.js":"3","D:\\react\\client\\src\\pages\\Register.js":"4","D:\\react\\client\\src\\pages\\Login.js":"5"},{"size":163,"mtime":1652809959891,"results":"6","hashOfConfig":"7"},{"size":517,"mtime":1652811583148,"results":"8","hashOfConfig":"7"},{"size":1625,"mtime":1652809959958,"results":"9","hashOfConfig":"7"},{"size":1231,"mtime":1652811655995,"results":"10","hashOfConfig":"7"},{"size":1094,"mtime":1652809960018,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1df3qps",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\react\\client\\src\\index.js",[],["24","25"],"D:\\react\\client\\src\\App.js",[],"D:\\react\\client\\src\\pages\\Dashboard.js",["26"],"import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useHistory } from 'react-router-dom'\n\nconst Dashboard = () => {\n\tconst history = useHistory()\n\tconst [quote, setQuote] = useState('')\n\tconst [tempQuote, setTempQuote] = useState('')\n\n\tasync function populateQuote() {\n\t\tconst req = await fetch('http://localhost:1337/api/quote', {\n\t\t\theaders: {\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\n\t\t\t},\n\t\t})\n\n\t\tconst data = await req.json()\n\t\tif (data.status === 'ok') {\n\t\t\tsetQuote(data.quote)\n\t\t} else {\n\t\t\talert(data.error)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (token) {\n\t\t\tconst user = jwt.decode(token)\n\t\t\tif (!user) {\n\t\t\t\tlocalStorage.removeItem('token')\n\t\t\t\thistory.replace('/login')\n\t\t\t} else {\n\t\t\t\tpopulateQuote()\n\t\t\t}\n\t\t}\n\t}, [])\n\n\tasync function updateQuote(event) {\n\t\tevent.preventDefault()\n\n\t\tconst req = await fetch('http://localhost:1337/api/quote', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquote: tempQuote,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await req.json()\n\t\tif (data.status === 'ok') {\n\t\t\tsetQuote(tempQuote)\n\t\t\tsetTempQuote('')\n\t\t} else {\n\t\t\talert(data.error)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Your quote: {quote || 'No quote found'}</h1>\n\t\t\t<form onSubmit={updateQuote}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Quote\"\n\t\t\t\t\tvalue={tempQuote}\n\t\t\t\t\tonChange={(e) => setTempQuote(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input type=\"submit\" value=\"Update quote\" />\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default Dashboard\n","D:\\react\\client\\src\\pages\\Register.js",[],"D:\\react\\client\\src\\pages\\Login.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":36,"column":5,"nodeType":"33","endLine":36,"endColumn":7,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [history]",{"range":"40","text":"41"},[818,820],"[history]"]